// Generated by Dagger (https://google.github.io/dagger).
package com.imagekit.android.data;

import android.content.Context;
import com.imagekit.android.util.SharedPrefUtil;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class Repository_Factory implements Factory<Repository> {
  private final Provider<Context> contextProvider;

  private final Provider<SharedPrefUtil> sharedPrefUtilProvider;

  public Repository_Factory(
      Provider<Context> contextProvider, Provider<SharedPrefUtil> sharedPrefUtilProvider) {
    this.contextProvider = contextProvider;
    this.sharedPrefUtilProvider = sharedPrefUtilProvider;
  }

  @Override
  public Repository get() {
    return provideInstance(contextProvider, sharedPrefUtilProvider);
  }

  public static Repository provideInstance(
      Provider<Context> contextProvider, Provider<SharedPrefUtil> sharedPrefUtilProvider) {
    return new Repository(contextProvider.get(), sharedPrefUtilProvider.get());
  }

  public static Repository_Factory create(
      Provider<Context> contextProvider, Provider<SharedPrefUtil> sharedPrefUtilProvider) {
    return new Repository_Factory(contextProvider, sharedPrefUtilProvider);
  }

  public static Repository newRepository(Context context, SharedPrefUtil sharedPrefUtil) {
    return new Repository(context, sharedPrefUtil);
  }
}
